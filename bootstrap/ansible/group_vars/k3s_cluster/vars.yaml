k3s_version: v1.32.1+k3s1
token: "{{ k3s_token }}"
systemd_dir: /etc/systemd/system
# api_endpoint: "{{ hostvars[groups['server'][0]]['ansible_host'] | default(groups['server'][0]) }}"
# api_endpoint: 172.16.1.170

# ha_enabled: true
# ha_cluster_vip: 172.16.1.170
# ha_cluster_method: kube-vip

# interface which will be used for flannel
flannel_iface: eth0

# uncomment calico_iface to use tigera operator/calico cni instead of flannel https://docs.tigera.io/calico/latest/about
# calico_iface: "eth0"
calico_ebpf: false # use eBPF dataplane instead of iptables
calico_tag: v3.29.2 # calico version tag

# uncomment cilium_iface to use cilium cni instead of flannel or calico
# ensure v4.19.57, v5.1.16, v5.2.0 or more recent kernel
# cilium_iface: "eth0"
cilium_mode: native # native when nodes on same subnet or using bgp, else set routed
cilium_tag: v1.16.7 # cilium version tag
cilium_hubble: true # enable hubble observability relay and ui

# if using calico or cilium, you may specify the cluster pod cidr pool
cluster_cidr: 10.52.0.0/16

# enable cilium bgp control plane for lb services and pod cidrs. disables metallb.
cilium_bgp: false

# bgp parameters for cilium cni. only active when cilium_iface is defined and cilium_bgp is true.
cilium_bgp_my_asn: "64513"
cilium_bgp_peer_asn: "64512"
cilium_bgp_peer_address: 192.168.30.1
cilium_bgp_lb_cidr: 192.168.31.0/24 # cidr for cilium loadbalancer ipam

# enable kube-vip ARP broadcasts
kube_vip_arp: true

# enable kube-vip BGP peering
kube_vip_bgp: false

# bgp parameters for kube-vip
kube_vip_bgp_routerid: "127.0.0.1"  # Defines the router ID for the BGP server
kube_vip_bgp_as: "64513"  # Defines the AS for the BGP server
kube_vip_bgp_peeraddress: "192.168.30.1"  # Defines the address for the BGP peer
kube_vip_bgp_peeras: "64512"  # Defines the AS for the BGP peer

apiserver_endpoint: 172.16.1.170

k3s_node_ip: "{{ ansible_facts[(cilium_iface | default(calico_iface | default(flannel_iface)))]['ipv4']['address'] }}"


k3s_master_taint: "{{ true if groups['agent'] | default([]) | length >= 1 else false }}"

extra_args: >-
  {{ '--flannel-iface=' + flannel_iface if calico_iface is not defined and cilium_iface is not defined else '' }}
  --node-ip={{ k3s_node_ip }}
  --kubelet-arg node-status-update-frequency=5s

# tls-san:
#   - "{{ apiserver_endpoint}}"
#   - "kube.{{ domain.name }}"

# change these to your liking, the only required are: --disable servicelb, --tls-san {{ apiserver_endpoint }}
# the contents of the if block is also required if using calico or cilium
extra_server_args: >-
  {{ extra_args }}
  {{ '--node-taint node-role.kubernetes.io/master=true:NoSchedule' if k3s_master_taint else '' }}
  {% if calico_iface is defined or cilium_iface is defined %}
  --flannel-backend=none
  --disable-network-policy
  --cluster-cidr={{ cluster_cidr | default('10.52.0.0/16') }}
  {% endif %}
  --tls-san {{ apiserver_endpoint }},kube.cooney.site,kube01.cooney.site
  --disable servicelb
  --disable traefik
  --kube-apiserver-arg default-not-ready-toleration-seconds=30
  --kube-apiserver-arg default-unreachable-toleration-seconds=30
  --kube-controller-arg node-monitor-period=20s
  --kube-controller-arg node-monitor-grace-period=20s

extra_agent_args: >-
  {{ extra_args }}

# image tag for kube-vip
kube_vip_tag_version: v0.8.9

# tag for kube-vip-cloud-provider manifest
# kube_vip_cloud_provider_tag_version: "main"

# kube-vip ip range for load balancer
# (uncomment to use kube-vip for services instead of MetalLB)
# kube_vip_lb_ip_range: "192.168.30.80-192.168.30.90"

# metallb type frr or native
metal_lb_type: native

# metallb mode layer2 or bgp
metal_lb_mode: layer2

# bgp options
# metal_lb_bgp_my_asn: "64513"
# metal_lb_bgp_peer_asn: "64512"
# metal_lb_bgp_peer_address: "192.168.30.1"

# image tag for metal lb
metal_lb_speaker_tag_version: v0.14.9
metal_lb_controller_tag_version: v0.14.9

# metallb ip range for load balancer
metal_lb_ip_range: 192.168.30.80-192.168.30.90

proxmox_lxc_configure: false
custom_registries: false
