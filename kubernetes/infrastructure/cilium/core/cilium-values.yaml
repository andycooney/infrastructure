autoDirectNodeRoutes: true
cgroup:
  autoMount:
    enabled: false
  hostRoot: "/sys/fs/cgroup"
devices: eth0
# enableIPv4Masquerade: true
envoy:
  enabled: true
  # securityContext:
  #   capabilities:
  #     keepCapNetBindService: true
  #     envoy:
  #     # Add NET_BIND_SERVICE to the list (keep the others!)
  #     - NET_BIND_SERVICE
externalIPs:
  enabled: true
gatewayAPI:
  enabled: true
  # hostNetwork:
  #   enabled: true
hubble:
  enabled: true
  ui:
    enabled: true
    rollOutPods: true
    replicas: 1
    tolerations:
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule
  relay:
    enabled: true
    replicas: 1
    rollOutPods: true
    tolerations:
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule
# ingressController:
#   enabled: true
#   default: true
#   service:
#     externalTrafficPolicy: Cluster
#     type: LoadBalancer
#     loadBalancerIP: "{{ ippool.ingress_controller.ip }}"
#   loadbalancerMode: shared
ipam:
  mode: kubernetes
  operator:
    clusterPoolIPv4PodCIDRList: "10.42.0.0/16"
    clusterPoolIPv4MaskSize: 24
ipv4:
  enabled: true
ipv4NativeRoutingCIDR: 10.244.0.0/16
ipv6:
  enabled: false
k8sServiceHost: "172.16.1.171"
k8sServicePort: "6443"
kubeProxyReplacement: "true"
l2announcements:
  enabled: true
loadBalancerIPs:
  enabled: true
operator:
  replicas: 1
  rollOutPods: true
rollOutCiliumPods: true
routingMode: "native"
securityContext:
  capabilities:
    keepCapNetBindService: true
tls:
  secretsNamespace:
    create: false
